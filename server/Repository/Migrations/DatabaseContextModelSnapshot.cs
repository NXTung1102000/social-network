// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Repository;

#nullable disable

namespace Repository.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ChatUser", b =>
                {
                    b.Property<Guid>("ChatsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MembersId")
                        .HasColumnType("uuid");

                    b.HasKey("ChatsId", "MembersId");

                    b.HasIndex("MembersId");

                    b.ToTable("ChatUser");
                });

            modelBuilder.Entity("Model.Schema.Chat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ImageCoverId")
                        .HasColumnType("uuid");

                    b.Property<string>("LastMessage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ImageCoverId");

                    b.ToTable("Chat");
                });

            modelBuilder.Entity("Model.Schema.ChatMember", b =>
                {
                    b.Property<Guid>("ChatId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("ChatId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("ChatMember");
                });

            modelBuilder.Entity("Model.Schema.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("LastUpdateAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("MediaId")
                        .HasColumnType("uuid");

                    b.Property<int>("MessageType")
                        .HasColumnType("integer");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("MediaId");

                    b.HasIndex("PostId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("Model.Schema.Like", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CommentId")
                        .HasColumnType("integer");

                    b.Property<Guid?>("MessageId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.HasIndex("MessageId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Like");
                });

            modelBuilder.Entity("Model.Schema.Media", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Media");
                });

            modelBuilder.Entity("Model.Schema.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ChatId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("LastUpdateAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("MediaId")
                        .HasColumnType("uuid");

                    b.Property<int>("MessageType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("MediaId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("Model.Schema.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Redirect")
                        .HasColumnType("integer");

                    b.Property<string>("Target")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("Model.Schema.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("Model.Schema.RelationShip", b =>
                {
                    b.Property<Guid>("UserId1")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId2")
                        .HasColumnType("uuid");

                    b.Property<int>("Relation")
                        .HasColumnType("integer");

                    b.Property<Guid>("User1Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("User2Id")
                        .HasColumnType("uuid");

                    b.HasKey("UserId1", "UserId2");

                    b.HasIndex("User1Id");

                    b.HasIndex("User2Id");

                    b.ToTable("RelationShip");
                });

            modelBuilder.Entity("Model.Schema.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<Guid?>("AvatarId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CoverPhotoId")
                        .HasColumnType("uuid");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<bool>("IsBlock")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phonenumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AvatarId");

                    b.HasIndex("CoverPhotoId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("74db699c-2a05-455d-b250-d2222bf08ef3"),
                            Address = "Room 1137",
                            Birthday = new DateTime(2003, 12, 9, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Lucia Hoonahan",
                            Email = "lhoonahan0@about.com",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+86 300 494 5588",
                            RefreshToken = "",
                            UserName = "lhoonahan0"
                        },
                        new
                        {
                            Id = new Guid("685fbf2e-ea19-4c46-bf6e-61528a949d0e"),
                            Address = "Suite 68",
                            Birthday = new DateTime(1998, 5, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Nikolaus Renish",
                            Email = "nrenish1@xing.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+62 571 701 4868",
                            RefreshToken = "",
                            UserName = "nrenish1"
                        },
                        new
                        {
                            Id = new Guid("dc8263fc-0493-485a-aced-b490473e46ca"),
                            Address = "PO Box 86531",
                            Birthday = new DateTime(1991, 8, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Ulric Clamo",
                            Email = "uclamo2@google.it",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+225 789 424 7730",
                            RefreshToken = "",
                            UserName = "uclamo2"
                        },
                        new
                        {
                            Id = new Guid("98298a15-8d3c-4baf-a9e9-04e936f90530"),
                            Address = "Room 1376",
                            Birthday = new DateTime(1997, 7, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Glynda Hacaud",
                            Email = "ghacaud3@walmart.com",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+7 123 481 5931",
                            RefreshToken = "",
                            UserName = "ghacaud3"
                        },
                        new
                        {
                            Id = new Guid("93fc0f14-479e-4ea1-8be2-1fa2a4908173"),
                            Address = "Suite 97",
                            Birthday = new DateTime(1981, 4, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Berke Winpenny",
                            Email = "bwinpenny4@apple.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+63 589 534 6421",
                            RefreshToken = "",
                            UserName = "bwinpenny4"
                        },
                        new
                        {
                            Id = new Guid("ef83ae2a-25e5-4587-a5ac-96a0ae5e7a39"),
                            Address = "Suite 91",
                            Birthday = new DateTime(2009, 2, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Milt Dacre",
                            Email = "mdacre5@elpais.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+55 108 859 9235",
                            RefreshToken = "",
                            UserName = "mdacre5"
                        },
                        new
                        {
                            Id = new Guid("96aa849d-09eb-437e-94e5-fc0f9f67bf56"),
                            Address = "Apt 231",
                            Birthday = new DateTime(1992, 5, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Basia Winny",
                            Email = "bwinny6@cisco.com",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+234 872 112 9439",
                            RefreshToken = "",
                            UserName = "bwinny6"
                        },
                        new
                        {
                            Id = new Guid("edee5ac6-8fc1-42f2-a8b2-437625d87976"),
                            Address = "14th Floor",
                            Birthday = new DateTime(2000, 6, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Emeline Siggery",
                            Email = "esiggery7@fc2.com",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+86 825 991 0078",
                            RefreshToken = "",
                            UserName = "esiggery7"
                        },
                        new
                        {
                            Id = new Guid("5d8077a9-09cd-47d6-bea5-ac77fddddc52"),
                            Address = "Suite 73",
                            Birthday = new DateTime(2004, 8, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Avrom Ekell",
                            Email = "aekell8@dion.ne.jp",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+359 394 533 3016",
                            RefreshToken = "",
                            UserName = "aekell8"
                        },
                        new
                        {
                            Id = new Guid("cab2c230-22df-488b-bf8b-4057b2931063"),
                            Address = "Suite 70",
                            Birthday = new DateTime(1983, 8, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Felicity Berger",
                            Email = "fberger9@wikia.com",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+33 558 260 3689",
                            RefreshToken = "",
                            UserName = "fberger9"
                        },
                        new
                        {
                            Id = new Guid("d0b752a4-2364-44f8-a53f-e971441fe1c1"),
                            Address = "Room 669",
                            Birthday = new DateTime(1986, 6, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Rosalyn Goodee",
                            Email = "rgoodeea@bloomberg.com",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+86 954 209 1325",
                            RefreshToken = "",
                            UserName = "rgoodeea"
                        },
                        new
                        {
                            Id = new Guid("f2f9ce59-fea9-4164-b7d3-241088217ca1"),
                            Address = "4th Floor",
                            Birthday = new DateTime(1996, 9, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Wylma Fisby",
                            Email = "wfisbyb@paginegialle.it",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+57 751 674 5993",
                            RefreshToken = "",
                            UserName = "wfisbyb"
                        },
                        new
                        {
                            Id = new Guid("b1206d33-83b6-4f6d-b35a-f7037ad9fcf8"),
                            Address = "Apt 41",
                            Birthday = new DateTime(1980, 12, 6, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Jessamyn Masi",
                            Email = "jmasic@technorati.com",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+54 145 835 4156",
                            RefreshToken = "",
                            UserName = "jmasic"
                        },
                        new
                        {
                            Id = new Guid("14f91ff2-5f6c-48e9-9c54-b9b8fec62ee4"),
                            Address = "Room 1897",
                            Birthday = new DateTime(2008, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Milicent Lavery",
                            Email = "mlaveryd@fastcompany.com",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+47 200 531 0688",
                            RefreshToken = "",
                            UserName = "mlaveryd"
                        },
                        new
                        {
                            Id = new Guid("8038716b-0165-4c0b-a5e7-d9668c424645"),
                            Address = "PO Box 94863",
                            Birthday = new DateTime(1996, 6, 18, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Atalanta Reglar",
                            Email = "areglare@illinois.edu",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+62 573 904 8222",
                            RefreshToken = "",
                            UserName = "areglare"
                        },
                        new
                        {
                            Id = new Guid("1c9360f8-ac1f-4f46-83cc-a0fb6fe70683"),
                            Address = "11th Floor",
                            Birthday = new DateTime(2006, 11, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Paxon Pinnegar",
                            Email = "ppinnegarf@dropbox.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+55 742 938 0535",
                            RefreshToken = "",
                            UserName = "ppinnegarf"
                        },
                        new
                        {
                            Id = new Guid("0a3f5497-63ce-4067-96e8-e8878a6b4046"),
                            Address = "Room 1240",
                            Birthday = new DateTime(2000, 2, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Gasper Marien",
                            Email = "gmarieng@columbia.edu",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+86 192 818 4804",
                            RefreshToken = "",
                            UserName = "gmarieng"
                        },
                        new
                        {
                            Id = new Guid("26fd5aa0-496f-4bef-96b6-59bb41cb636e"),
                            Address = "Suite 73",
                            Birthday = new DateTime(1996, 12, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Toiboid Ferron",
                            Email = "tferronh@tamu.edu",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+48 410 657 5879",
                            RefreshToken = "",
                            UserName = "tferronh"
                        },
                        new
                        {
                            Id = new Guid("5190615c-625a-448f-9349-c1edae6e40bb"),
                            Address = "Apt 1780",
                            Birthday = new DateTime(1998, 4, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Layton Sutcliff",
                            Email = "lsutcliffi@nbcnews.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+86 806 514 6703",
                            RefreshToken = "",
                            UserName = "lsutcliffi"
                        },
                        new
                        {
                            Id = new Guid("aa591b01-f649-4510-8fad-80bcbe15362b"),
                            Address = "Room 675",
                            Birthday = new DateTime(2009, 2, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Brittney Holtom",
                            Email = "bholtomj@miitbeian.gov.cn",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+48 434 166 5456",
                            RefreshToken = "",
                            UserName = "bholtomj"
                        },
                        new
                        {
                            Id = new Guid("3cf9393e-214e-449d-a796-aef4f22f27be"),
                            Address = "PO Box 51977",
                            Birthday = new DateTime(2008, 11, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Gabriel Ruvel",
                            Email = "gruvelk@cam.ac.uk",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+62 873 428 9886",
                            RefreshToken = "",
                            UserName = "gruvelk"
                        },
                        new
                        {
                            Id = new Guid("53e3224d-40ca-423c-85cb-0908aed68558"),
                            Address = "8th Floor",
                            Birthday = new DateTime(1999, 9, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Eva Stag",
                            Email = "estagl@cdbaby.com",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+86 824 914 9036",
                            RefreshToken = "",
                            UserName = "estagl"
                        },
                        new
                        {
                            Id = new Guid("395bec8f-a363-4b9b-9130-9faabbc7030a"),
                            Address = "Apt 99",
                            Birthday = new DateTime(1996, 3, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Marya Leall",
                            Email = "mleallm@addtoany.com",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+7 161 251 3077",
                            RefreshToken = "",
                            UserName = "mleallm"
                        },
                        new
                        {
                            Id = new Guid("913381bb-f584-4b8d-9c4c-8d99bae41f94"),
                            Address = "PO Box 2439",
                            Birthday = new DateTime(1999, 4, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Sherlocke Lowater",
                            Email = "slowatern@clickbank.net",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+62 479 865 7435",
                            RefreshToken = "",
                            UserName = "slowatern"
                        },
                        new
                        {
                            Id = new Guid("2c8632eb-189d-4ab4-b3e9-8dcae96df7e9"),
                            Address = "PO Box 52305",
                            Birthday = new DateTime(1986, 1, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Clair Grimsdyke",
                            Email = "cgrimsdykeo@example.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+86 284 638 5779",
                            RefreshToken = "",
                            UserName = "cgrimsdykeo"
                        },
                        new
                        {
                            Id = new Guid("711cf0e2-8eb6-487b-a811-1a31e5fe85fd"),
                            Address = "Apt 660",
                            Birthday = new DateTime(2001, 3, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Geno Houliston",
                            Email = "ghoulistonp@free.fr",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+381 399 927 7606",
                            RefreshToken = "",
                            UserName = "ghoulistonp"
                        },
                        new
                        {
                            Id = new Guid("7593015b-da4d-4c4f-a0fe-060e0580ffdc"),
                            Address = "Suite 59",
                            Birthday = new DateTime(2006, 11, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Mackenzie Knellen",
                            Email = "mknellenq@dmoz.org",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+81 410 501 7491",
                            RefreshToken = "",
                            UserName = "mknellenq"
                        },
                        new
                        {
                            Id = new Guid("89ff4f67-0589-4961-8371-abd7cee63728"),
                            Address = "Suite 4",
                            Birthday = new DateTime(1995, 12, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Yolanda Korting",
                            Email = "ykortingr@wikispaces.com",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+351 780 597 3423",
                            RefreshToken = "",
                            UserName = "ykortingr"
                        },
                        new
                        {
                            Id = new Guid("d9404d45-5418-4a77-bf1f-2cf37b3ebfc3"),
                            Address = "Suite 31",
                            Birthday = new DateTime(2002, 10, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Kearney Rean",
                            Email = "kreans@wunderground.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+63 754 718 0421",
                            RefreshToken = "",
                            UserName = "kreans"
                        },
                        new
                        {
                            Id = new Guid("f8dba2f9-5607-4f9a-abed-92a3306b88d5"),
                            Address = "Suite 10",
                            Birthday = new DateTime(1989, 7, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Blakelee Hindmoor",
                            Email = "bhindmoort@intel.com",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+33 486 310 5537",
                            RefreshToken = "",
                            UserName = "bhindmoort"
                        },
                        new
                        {
                            Id = new Guid("2505e113-ee1c-46ce-adb4-b0a1910af932"),
                            Address = "Suite 10",
                            Birthday = new DateTime(2001, 7, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Caitrin Fass",
                            Email = "cfassu@smugmug.com",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+62 444 390 4281",
                            RefreshToken = "",
                            UserName = "cfassu"
                        },
                        new
                        {
                            Id = new Guid("2abdebbb-7b96-40b6-978a-c1e3b55d4460"),
                            Address = "Suite 15",
                            Birthday = new DateTime(1995, 11, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Tabor Elloway",
                            Email = "tellowayv@umn.edu",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+86 751 400 2866",
                            RefreshToken = "",
                            UserName = "tellowayv"
                        },
                        new
                        {
                            Id = new Guid("f957f63b-d317-42a7-8080-e317829f6b3a"),
                            Address = "Room 211",
                            Birthday = new DateTime(1996, 5, 9, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Theodoric Cartmel",
                            Email = "tcartmelw@wix.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+1 716 592 5014",
                            RefreshToken = "",
                            UserName = "tcartmelw"
                        },
                        new
                        {
                            Id = new Guid("7eee451e-d38c-43f1-b823-899aee943a23"),
                            Address = "Suite 30",
                            Birthday = new DateTime(2000, 5, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Lydon Oldroyde",
                            Email = "loldroydex@1688.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+92 218 551 3914",
                            RefreshToken = "",
                            UserName = "loldroydex"
                        },
                        new
                        {
                            Id = new Guid("93773cf6-4e19-4f06-bdfb-15b20f805891"),
                            Address = "Room 330",
                            Birthday = new DateTime(1992, 1, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Jacenta Mansion",
                            Email = "jmansiony@stanford.edu",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+62 140 338 5498",
                            RefreshToken = "",
                            UserName = "jmansiony"
                        },
                        new
                        {
                            Id = new Guid("9383ea72-e7a7-4636-b741-529e85bfb417"),
                            Address = "PO Box 6255",
                            Birthday = new DateTime(2001, 4, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Lennard Blissitt",
                            Email = "lblissittz@cnn.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+86 847 599 0102",
                            RefreshToken = "",
                            UserName = "lblissittz"
                        },
                        new
                        {
                            Id = new Guid("c050f59c-192f-440b-9d98-11e9003db9fd"),
                            Address = "Room 354",
                            Birthday = new DateTime(1984, 1, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Randell Rookes",
                            Email = "rrookes10@1und1.de",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+86 588 961 3952",
                            RefreshToken = "",
                            UserName = "rrookes10"
                        },
                        new
                        {
                            Id = new Guid("a553ea19-61f9-475a-b4d1-e28d32877c4d"),
                            Address = "Room 1290",
                            Birthday = new DateTime(1999, 4, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Mozes Hadrill",
                            Email = "mhadrill11@csmonitor.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+55 150 897 1287",
                            RefreshToken = "",
                            UserName = "mhadrill11"
                        },
                        new
                        {
                            Id = new Guid("dd76a605-11f5-46be-8ae4-57207aedd42e"),
                            Address = "Apt 1883",
                            Birthday = new DateTime(2005, 3, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Byrom Hooban",
                            Email = "bhooban12@noaa.gov",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+52 339 266 6510",
                            RefreshToken = "",
                            UserName = "bhooban12"
                        },
                        new
                        {
                            Id = new Guid("31ad0b31-3b4e-471b-892f-b10a5b2b00a5"),
                            Address = "19th Floor",
                            Birthday = new DateTime(1987, 6, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Che Steeples",
                            Email = "csteeples13@reuters.com",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+86 963 339 5732",
                            RefreshToken = "",
                            UserName = "csteeples13"
                        },
                        new
                        {
                            Id = new Guid("26e718d8-3d45-437c-893f-9fd7458a3e25"),
                            Address = "Apt 624",
                            Birthday = new DateTime(1995, 11, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Odette Hanscombe",
                            Email = "ohanscombe14@scientificamerican.com",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+46 606 276 4004",
                            RefreshToken = "",
                            UserName = "ohanscombe14"
                        },
                        new
                        {
                            Id = new Guid("4e5d891d-773a-4462-8bdf-296f153aecc8"),
                            Address = "9th Floor",
                            Birthday = new DateTime(2009, 12, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Maris McKew",
                            Email = "mmckew15@cpanel.net",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+62 243 987 9010",
                            RefreshToken = "",
                            UserName = "mmckew15"
                        },
                        new
                        {
                            Id = new Guid("0c0aca91-45ba-4fd2-b417-f34ded926941"),
                            Address = "Room 1551",
                            Birthday = new DateTime(1996, 3, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Cassandra Danick",
                            Email = "cdanick16@bravesites.com",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+7 192 313 4831",
                            RefreshToken = "",
                            UserName = "cdanick16"
                        },
                        new
                        {
                            Id = new Guid("b5a702f0-88ae-4c89-a9ef-4802fc812726"),
                            Address = "Suite 47",
                            Birthday = new DateTime(2009, 7, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Sybille Harly",
                            Email = "sharly17@foxnews.com",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+1 921 953 8511",
                            RefreshToken = "",
                            UserName = "sharly17"
                        },
                        new
                        {
                            Id = new Guid("a99d3d57-c3fc-43e6-bf86-f399f1d6095b"),
                            Address = "Suite 50",
                            Birthday = new DateTime(1986, 7, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Gertie Stile",
                            Email = "gstile18@studiopress.com",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+1 323 215 8229",
                            RefreshToken = "",
                            UserName = "gstile18"
                        },
                        new
                        {
                            Id = new Guid("c3c62964-d8f4-49db-b336-c14377c73f9d"),
                            Address = "2nd Floor",
                            Birthday = new DateTime(1995, 8, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Tomkin Whyborne",
                            Email = "twhyborne19@cnn.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+1 303 573 3210",
                            RefreshToken = "",
                            UserName = "twhyborne19"
                        },
                        new
                        {
                            Id = new Guid("6f0bebb6-ea5e-48f1-8c7b-e4532fe6002a"),
                            Address = "Suite 8",
                            Birthday = new DateTime(1989, 10, 6, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Darrel Hodgets",
                            Email = "dhodgets1a@indiegogo.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+62 912 164 9763",
                            RefreshToken = "",
                            UserName = "dhodgets1a"
                        },
                        new
                        {
                            Id = new Guid("063d4c6d-87d0-445e-a149-3671a9029e75"),
                            Address = "Suite 95",
                            Birthday = new DateTime(1995, 11, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Herbert Smooth",
                            Email = "hsmooth1b@gizmodo.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+52 243 441 6891",
                            RefreshToken = "",
                            UserName = "hsmooth1b"
                        },
                        new
                        {
                            Id = new Guid("092f52a5-e2dd-4683-84fd-bc1e41d11024"),
                            Address = "3rd Floor",
                            Birthday = new DateTime(2000, 10, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Marlena Bisatt",
                            Email = "mbisatt1c@bloomberg.com",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+7 961 460 2271",
                            RefreshToken = "",
                            UserName = "mbisatt1c"
                        },
                        new
                        {
                            Id = new Guid("4440f9b3-e64d-46de-928c-3b9a1812f319"),
                            Address = "Suite 38",
                            Birthday = new DateTime(2003, 5, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Miran Di Giacomo",
                            Email = "mdi1d@gov.uk",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+63 298 301 0165",
                            RefreshToken = "",
                            UserName = "mdi1d"
                        },
                        new
                        {
                            Id = new Guid("f10108ba-9b48-4815-8d14-441e8f6dbe05"),
                            Address = "Room 1783",
                            Birthday = new DateTime(1982, 4, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Sindee Queyos",
                            Email = "squeyos1e@berkeley.edu",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+257 107 131 9355",
                            RefreshToken = "",
                            UserName = "squeyos1e"
                        },
                        new
                        {
                            Id = new Guid("ae7c3960-7949-4354-83af-c5c0196cd386"),
                            Address = "PO Box 90561",
                            Birthday = new DateTime(1998, 1, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Arri Brittain",
                            Email = "abrittain1f@sitemeter.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+20 583 926 7348",
                            RefreshToken = "",
                            UserName = "abrittain1f"
                        },
                        new
                        {
                            Id = new Guid("2046c2ff-ff04-4e49-ad7d-ad75c84fa99f"),
                            Address = "Apt 1825",
                            Birthday = new DateTime(2003, 7, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Flint Hughf",
                            Email = "fhughf1g@blogger.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+54 688 811 0111",
                            RefreshToken = "",
                            UserName = "fhughf1g"
                        },
                        new
                        {
                            Id = new Guid("51493e94-1f18-4a1f-aefb-8c86b840cbf3"),
                            Address = "17th Floor",
                            Birthday = new DateTime(1990, 2, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Shurlock Provest",
                            Email = "sprovest1h@google.de",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+62 436 581 8351",
                            RefreshToken = "",
                            UserName = "sprovest1h"
                        },
                        new
                        {
                            Id = new Guid("6cae73f1-aab4-4174-a5ed-cd522fb75dc5"),
                            Address = "Room 1257",
                            Birthday = new DateTime(1982, 4, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Jennifer Fountaine",
                            Email = "jfountaine1i@nifty.com",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+86 140 511 4550",
                            RefreshToken = "",
                            UserName = "jfountaine1i"
                        },
                        new
                        {
                            Id = new Guid("7c057638-7d54-4267-afe5-dbe4ff47eb58"),
                            Address = "Apt 927",
                            Birthday = new DateTime(1991, 1, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Gerek Luckes",
                            Email = "gluckes1j@senate.gov",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+62 822 689 1861",
                            RefreshToken = "",
                            UserName = "gluckes1j"
                        },
                        new
                        {
                            Id = new Guid("f044c485-427f-4d94-9c58-3267a85fe82b"),
                            Address = "PO Box 43205",
                            Birthday = new DateTime(1985, 12, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Cami Evershed",
                            Email = "cevershed1k@cargocollective.com",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+7 881 914 0088",
                            RefreshToken = "",
                            UserName = "cevershed1k"
                        },
                        new
                        {
                            Id = new Guid("dcc2352e-71d0-45c7-9ea7-cff93bc8eec1"),
                            Address = "PO Box 1316",
                            Birthday = new DateTime(2010, 5, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Tuckie Waddingham",
                            Email = "twaddingham1l@state.tx.us",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+48 460 879 7856",
                            RefreshToken = "",
                            UserName = "twaddingham1l"
                        },
                        new
                        {
                            Id = new Guid("80842ce0-f3af-4fd2-9cbb-657da3e071ea"),
                            Address = "14th Floor",
                            Birthday = new DateTime(1993, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Esteban Saywell",
                            Email = "esaywell1m@plala.or.jp",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+86 464 845 6785",
                            RefreshToken = "",
                            UserName = "esaywell1m"
                        },
                        new
                        {
                            Id = new Guid("04d21fe5-b169-49fe-a9f7-0e64dd09d79b"),
                            Address = "Room 254",
                            Birthday = new DateTime(1990, 11, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Tanya Beney",
                            Email = "tbeney1n@slideshare.net",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+93 805 555 6783",
                            RefreshToken = "",
                            UserName = "tbeney1n"
                        },
                        new
                        {
                            Id = new Guid("fd3f77f9-1ae6-43cd-bb85-e379bebb85cd"),
                            Address = "PO Box 65263",
                            Birthday = new DateTime(1998, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Kelly Crux",
                            Email = "kcrux1o@nyu.edu",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+55 670 213 2116",
                            RefreshToken = "",
                            UserName = "kcrux1o"
                        },
                        new
                        {
                            Id = new Guid("db16d5c1-8259-4b98-ab76-8f7e836ac496"),
                            Address = "PO Box 69627",
                            Birthday = new DateTime(1985, 7, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Mortimer Griffith",
                            Email = "mgriffith1p@auda.org.au",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+86 538 268 2153",
                            RefreshToken = "",
                            UserName = "mgriffith1p"
                        },
                        new
                        {
                            Id = new Guid("63115aeb-18c7-4871-bdf8-a25057c56cee"),
                            Address = "PO Box 27189",
                            Birthday = new DateTime(1997, 6, 18, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Iago Pennazzi",
                            Email = "ipennazzi1q@acquirethisname.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+84 255 358 5970",
                            RefreshToken = "",
                            UserName = "ipennazzi1q"
                        },
                        new
                        {
                            Id = new Guid("bac7715e-2030-4245-89c5-98e9316c9622"),
                            Address = "Suite 26",
                            Birthday = new DateTime(1980, 2, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Marci Caren",
                            Email = "mcaren1r@boston.com",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+1 775 488 0749",
                            RefreshToken = "",
                            UserName = "mcaren1r"
                        },
                        new
                        {
                            Id = new Guid("48537e57-b5d9-4973-8734-5c7934d6d5bd"),
                            Address = "19th Floor",
                            Birthday = new DateTime(1993, 11, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Zedekiah Anglim",
                            Email = "zanglim1s@w3.org",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+81 819 881 8979",
                            RefreshToken = "",
                            UserName = "zanglim1s"
                        },
                        new
                        {
                            Id = new Guid("cb16687f-6d27-4859-8e5f-44a57600f55e"),
                            Address = "Suite 7",
                            Birthday = new DateTime(1999, 7, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Merell Ivanyushin",
                            Email = "mivanyushin1t@sbwire.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+86 931 881 5172",
                            RefreshToken = "",
                            UserName = "mivanyushin1t"
                        },
                        new
                        {
                            Id = new Guid("f4fabeeb-9e87-411b-b864-8fc90d66d245"),
                            Address = "Room 930",
                            Birthday = new DateTime(1990, 4, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Ragnar Fairlaw",
                            Email = "rfairlaw1u@statcounter.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+593 213 988 7999",
                            RefreshToken = "",
                            UserName = "rfairlaw1u"
                        },
                        new
                        {
                            Id = new Guid("ab280826-c238-4060-b33f-e5e4e65181a7"),
                            Address = "5th Floor",
                            Birthday = new DateTime(1991, 11, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Corabel Weerdenburg",
                            Email = "cweerdenburg1v@statcounter.com",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+33 186 970 4221",
                            RefreshToken = "",
                            UserName = "cweerdenburg1v"
                        },
                        new
                        {
                            Id = new Guid("e792d3be-83d6-4ea1-8a8c-c14d69b7bd3a"),
                            Address = "Room 233",
                            Birthday = new DateTime(1983, 1, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Ardene Mudd",
                            Email = "amudd1w@paypal.com",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+86 986 432 3434",
                            RefreshToken = "",
                            UserName = "amudd1w"
                        },
                        new
                        {
                            Id = new Guid("182d8d6b-28fc-4a34-82d8-d7a118037cbf"),
                            Address = "PO Box 23862",
                            Birthday = new DateTime(1995, 6, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Ogdon Hindhaugh",
                            Email = "ohindhaugh1x@zimbio.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+86 779 538 4975",
                            RefreshToken = "",
                            UserName = "ohindhaugh1x"
                        },
                        new
                        {
                            Id = new Guid("33e04aa4-e275-411e-b0b7-21254d0ec7b9"),
                            Address = "PO Box 86697",
                            Birthday = new DateTime(1999, 12, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Paulie Duckfield",
                            Email = "pduckfield1y@microsoft.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+33 777 268 1515",
                            RefreshToken = "",
                            UserName = "pduckfield1y"
                        },
                        new
                        {
                            Id = new Guid("45fe4a09-51ab-4d57-8e95-ae42d98a8e65"),
                            Address = "Room 1388",
                            Birthday = new DateTime(1988, 5, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Emili Radbond",
                            Email = "eradbond1z@mit.edu",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+51 628 717 1060",
                            RefreshToken = "",
                            UserName = "eradbond1z"
                        },
                        new
                        {
                            Id = new Guid("94ccbdce-4ad5-4595-9980-8b5b06ff9bb2"),
                            Address = "10th Floor",
                            Birthday = new DateTime(2005, 8, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Kathlin Carnow",
                            Email = "kcarnow20@ox.ac.uk",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+33 107 228 2828",
                            RefreshToken = "",
                            UserName = "kcarnow20"
                        },
                        new
                        {
                            Id = new Guid("e80d101e-a0f4-4ce5-850c-4357d8abdc2e"),
                            Address = "PO Box 27159",
                            Birthday = new DateTime(1986, 12, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Vincenty Denzilow",
                            Email = "vdenzilow21@elegantthemes.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+86 894 860 3333",
                            RefreshToken = "",
                            UserName = "vdenzilow21"
                        },
                        new
                        {
                            Id = new Guid("18089d60-1c80-40e3-90bb-070efa846968"),
                            Address = "PO Box 36056",
                            Birthday = new DateTime(1986, 5, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Nickolai Crocetto",
                            Email = "ncrocetto22@nydailynews.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+55 374 459 4021",
                            RefreshToken = "",
                            UserName = "ncrocetto22"
                        },
                        new
                        {
                            Id = new Guid("d371c7ad-c689-4335-b38e-bf634e1a632e"),
                            Address = "16th Floor",
                            Birthday = new DateTime(2000, 9, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Trenton Gisburn",
                            Email = "tgisburn23@wordpress.org",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+86 589 185 4668",
                            RefreshToken = "",
                            UserName = "tgisburn23"
                        },
                        new
                        {
                            Id = new Guid("982a5c9f-07b6-46a1-aa98-d6de5db3ed7b"),
                            Address = "Apt 1846",
                            Birthday = new DateTime(2005, 11, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Rhodia Davidi",
                            Email = "rdavidi24@unblog.fr",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+63 960 493 0562",
                            RefreshToken = "",
                            UserName = "rdavidi24"
                        },
                        new
                        {
                            Id = new Guid("5ed2bbaf-6368-4795-bf3d-a2bc81fae3f1"),
                            Address = "Apt 1586",
                            Birthday = new DateTime(1999, 10, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Phineas Cummins",
                            Email = "pcummins25@craigslist.org",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+63 651 830 9069",
                            RefreshToken = "",
                            UserName = "pcummins25"
                        },
                        new
                        {
                            Id = new Guid("f818bf66-266f-4189-9883-6b936b871c71"),
                            Address = "Suite 80",
                            Birthday = new DateTime(2009, 3, 6, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Thedrick Ludee",
                            Email = "tludee26@merriam-webster.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+49 744 381 3187",
                            RefreshToken = "",
                            UserName = "tludee26"
                        },
                        new
                        {
                            Id = new Guid("2ce3b1b8-e433-4700-93ae-b0cb992d6a02"),
                            Address = "Room 629",
                            Birthday = new DateTime(2007, 9, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Susan Ferras",
                            Email = "sferras27@miitbeian.gov.cn",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+63 565 382 1877",
                            RefreshToken = "",
                            UserName = "sferras27"
                        },
                        new
                        {
                            Id = new Guid("f8a54586-5089-425f-a686-0bb3ee52a774"),
                            Address = "PO Box 38947",
                            Birthday = new DateTime(1981, 12, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Dianna Marjot",
                            Email = "dmarjot28@naver.com",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+56 311 922 2790",
                            RefreshToken = "",
                            UserName = "dmarjot28"
                        },
                        new
                        {
                            Id = new Guid("02c87600-332d-44c9-8faa-fca5f3232069"),
                            Address = "17th Floor",
                            Birthday = new DateTime(1997, 11, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Tarrance Sans",
                            Email = "tsans29@delicious.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+387 134 469 3559",
                            RefreshToken = "",
                            UserName = "tsans29"
                        },
                        new
                        {
                            Id = new Guid("75e4399e-7dde-48b2-a97d-10477b902592"),
                            Address = "Apt 262",
                            Birthday = new DateTime(1996, 11, 18, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Rebekah Harbisher",
                            Email = "rharbisher2a@mapquest.com",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+27 472 646 0728",
                            RefreshToken = "",
                            UserName = "rharbisher2a"
                        },
                        new
                        {
                            Id = new Guid("b293c706-f6b9-4d2a-b647-72ade76803c7"),
                            Address = "Suite 19",
                            Birthday = new DateTime(1995, 4, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Thayne McKennan",
                            Email = "tmckennan2b@wufoo.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+63 119 604 8230",
                            RefreshToken = "",
                            UserName = "tmckennan2b"
                        },
                        new
                        {
                            Id = new Guid("df3bfb94-8280-4b94-805c-43c12873a3b2"),
                            Address = "Suite 68",
                            Birthday = new DateTime(2004, 4, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Marja Melson",
                            Email = "mmelson2c@free.fr",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+221 146 447 5591",
                            RefreshToken = "",
                            UserName = "mmelson2c"
                        },
                        new
                        {
                            Id = new Guid("d38ee58a-9e2c-4223-aa3b-e7ee32fdf0f1"),
                            Address = "Room 1478",
                            Birthday = new DateTime(2007, 8, 6, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Sorcha Buxam",
                            Email = "sbuxam2d@ifeng.com",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+51 739 742 4507",
                            RefreshToken = "",
                            UserName = "sbuxam2d"
                        },
                        new
                        {
                            Id = new Guid("183fea4e-7f32-457e-ac17-dfc38edcc7c5"),
                            Address = "Room 1048",
                            Birthday = new DateTime(2007, 7, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Brendin Espinho",
                            Email = "bespinho2e@zimbio.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+84 301 980 4189",
                            RefreshToken = "",
                            UserName = "bespinho2e"
                        },
                        new
                        {
                            Id = new Guid("2bf7b3bc-80da-4b99-8478-f0fd99445f10"),
                            Address = "Room 280",
                            Birthday = new DateTime(1983, 10, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Burton Lohan",
                            Email = "blohan2f@oracle.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+86 484 290 1614",
                            RefreshToken = "",
                            UserName = "blohan2f"
                        },
                        new
                        {
                            Id = new Guid("6349259d-3aea-464b-b88e-5e6e2ad792fb"),
                            Address = "Suite 90",
                            Birthday = new DateTime(1994, 10, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Hannis Duchenne",
                            Email = "hduchenne2g@mit.edu",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+86 883 971 0140",
                            RefreshToken = "",
                            UserName = "hduchenne2g"
                        },
                        new
                        {
                            Id = new Guid("88a10def-f37e-4864-b6dc-da950659d42e"),
                            Address = "12th Floor",
                            Birthday = new DateTime(2003, 8, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Eben Durning",
                            Email = "edurning2h@cbslocal.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+62 120 600 4007",
                            RefreshToken = "",
                            UserName = "edurning2h"
                        },
                        new
                        {
                            Id = new Guid("4595c478-9f7e-4828-a106-c6106cb5230b"),
                            Address = "Suite 79",
                            Birthday = new DateTime(1989, 10, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Dalia Brisse",
                            Email = "dbrisse2i@mail.ru",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+7 292 805 6250",
                            RefreshToken = "",
                            UserName = "dbrisse2i"
                        },
                        new
                        {
                            Id = new Guid("390ae664-4c28-41d1-b73c-e1b46887300e"),
                            Address = "Room 379",
                            Birthday = new DateTime(2007, 4, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Martino Hamill",
                            Email = "mhamill2j@xing.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+33 704 414 5928",
                            RefreshToken = "",
                            UserName = "mhamill2j"
                        },
                        new
                        {
                            Id = new Guid("06954eb0-7965-416f-865b-ca37e839d176"),
                            Address = "14th Floor",
                            Birthday = new DateTime(1987, 2, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Dee Lagadu",
                            Email = "dlagadu2k@independent.co.uk",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+1 929 272 5138",
                            RefreshToken = "",
                            UserName = "dlagadu2k"
                        },
                        new
                        {
                            Id = new Guid("678f479b-f803-4183-811c-b50236251d09"),
                            Address = "PO Box 66928",
                            Birthday = new DateTime(1989, 2, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Patrizio Ossulton",
                            Email = "possulton2l@ow.ly",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+502 562 498 8408",
                            RefreshToken = "",
                            UserName = "possulton2l"
                        },
                        new
                        {
                            Id = new Guid("e9d26936-1503-4d68-b1a8-640374b85c38"),
                            Address = "Apt 1196",
                            Birthday = new DateTime(1984, 7, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Caroline Rhead",
                            Email = "crhead2m@nytimes.com",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+62 668 105 8368",
                            RefreshToken = "",
                            UserName = "crhead2m"
                        },
                        new
                        {
                            Id = new Guid("75c88dd2-4897-453b-8a87-e6b2f92a8c56"),
                            Address = "PO Box 43206",
                            Birthday = new DateTime(2010, 10, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Jeanne Gyver",
                            Email = "jgyver2n@skyrock.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+66 966 304 1461",
                            RefreshToken = "",
                            UserName = "jgyver2n"
                        },
                        new
                        {
                            Id = new Guid("b86478e4-9a1e-4362-a51e-30c539151884"),
                            Address = "Apt 81",
                            Birthday = new DateTime(1981, 11, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Desiri Assiratti",
                            Email = "dassiratti2o@boston.com",
                            Gender = 1,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+353 619 790 4818",
                            RefreshToken = "",
                            UserName = "dassiratti2o"
                        },
                        new
                        {
                            Id = new Guid("9bccd2d2-c8b7-4b91-a032-2ddb8cdb94c5"),
                            Address = "PO Box 26645",
                            Birthday = new DateTime(1982, 5, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Noland Crosfield",
                            Email = "ncrosfield2p@mayoclinic.com",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+1 214 266 7530",
                            RefreshToken = "",
                            UserName = "ncrosfield2p"
                        },
                        new
                        {
                            Id = new Guid("fda8cb18-52c5-413f-b0f0-0a3dc600d28d"),
                            Address = "Room 206",
                            Birthday = new DateTime(1995, 8, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Thorny Brandino",
                            Email = "tbrandino2q@nps.gov",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+48 780 793 5631",
                            RefreshToken = "",
                            UserName = "tbrandino2q"
                        },
                        new
                        {
                            Id = new Guid("c2b221a0-7efb-4f8a-bcc3-3fe1cef13d3a"),
                            Address = "Apt 1593",
                            Birthday = new DateTime(1989, 2, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            DisplayName = "Eugen Mingaye",
                            Email = "emingaye2r@google.es",
                            Gender = 0,
                            IsBlock = false,
                            Password = "",
                            Phonenumber = "+1 216 114 7742",
                            RefreshToken = "",
                            UserName = "emingaye2r"
                        });
                });

            modelBuilder.Entity("ChatUser", b =>
                {
                    b.HasOne("Model.Schema.Chat", null)
                        .WithMany()
                        .HasForeignKey("ChatsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Schema.User", null)
                        .WithMany()
                        .HasForeignKey("MembersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Schema.Chat", b =>
                {
                    b.HasOne("Model.Schema.Media", "ImageCover")
                        .WithMany()
                        .HasForeignKey("ImageCoverId");

                    b.Navigation("ImageCover");
                });

            modelBuilder.Entity("Model.Schema.ChatMember", b =>
                {
                    b.HasOne("Model.Schema.Chat", "Chat")
                        .WithMany()
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Schema.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Model.Schema.Comment", b =>
                {
                    b.HasOne("Model.Schema.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Schema.Media", "Media")
                        .WithMany()
                        .HasForeignKey("MediaId");

                    b.HasOne("Model.Schema.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId");

                    b.Navigation("Creator");

                    b.Navigation("Media");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Model.Schema.Like", b =>
                {
                    b.HasOne("Model.Schema.Comment", "Comment")
                        .WithMany("Likes")
                        .HasForeignKey("CommentId");

                    b.HasOne("Model.Schema.Message", "Message")
                        .WithMany("Likes")
                        .HasForeignKey("MessageId");

                    b.HasOne("Model.Schema.Post", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostId");

                    b.HasOne("Model.Schema.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comment");

                    b.Navigation("Message");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Model.Schema.Media", b =>
                {
                    b.HasOne("Model.Schema.Post", null)
                        .WithMany("Medias")
                        .HasForeignKey("PostId");
                });

            modelBuilder.Entity("Model.Schema.Message", b =>
                {
                    b.HasOne("Model.Schema.Chat", "Chat")
                        .WithMany()
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Schema.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Schema.Media", "Media")
                        .WithMany()
                        .HasForeignKey("MediaId");

                    b.Navigation("Chat");

                    b.Navigation("Creator");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("Model.Schema.Notification", b =>
                {
                    b.HasOne("Model.Schema.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Model.Schema.Post", b =>
                {
                    b.HasOne("Model.Schema.User", "Creator")
                        .WithMany("NewFeed")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Model.Schema.RelationShip", b =>
                {
                    b.HasOne("Model.Schema.User", "User1")
                        .WithMany()
                        .HasForeignKey("User1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Schema.User", "User2")
                        .WithMany()
                        .HasForeignKey("User2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User1");

                    b.Navigation("User2");
                });

            modelBuilder.Entity("Model.Schema.User", b =>
                {
                    b.HasOne("Model.Schema.Media", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarId");

                    b.HasOne("Model.Schema.Media", "CoverPhoto")
                        .WithMany()
                        .HasForeignKey("CoverPhotoId");

                    b.Navigation("Avatar");

                    b.Navigation("CoverPhoto");
                });

            modelBuilder.Entity("Model.Schema.Comment", b =>
                {
                    b.Navigation("Likes");
                });

            modelBuilder.Entity("Model.Schema.Message", b =>
                {
                    b.Navigation("Likes");
                });

            modelBuilder.Entity("Model.Schema.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Likes");

                    b.Navigation("Medias");
                });

            modelBuilder.Entity("Model.Schema.User", b =>
                {
                    b.Navigation("NewFeed");

                    b.Navigation("Notifications");
                });
#pragma warning restore 612, 618
        }
    }
}
